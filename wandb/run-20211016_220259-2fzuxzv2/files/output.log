[32m[10/16 22:03:04 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=4, bias=True)
    )
  )
)
  0%|                                                   | 0/559 [00:00<?, ?it/s]  6%|██▌                                      | 35/559 [00:00<00:01, 349.28it/s] 13%|█████▏                                   | 70/559 [00:00<00:01, 343.05it/s] 19%|███████▌                                | 105/559 [00:00<00:01, 342.30it/s] 26%|██████████▎                             | 144/559 [00:00<00:01, 357.41it/s] 32%|████████████▉                           | 180/559 [00:00<00:01, 357.95it/s] 39%|███████████████▍                        | 216/559 [00:00<00:00, 355.60it/s] 45%|██████████████████                      | 252/559 [00:00<00:00, 355.13it/s] 52%|████████████████████▌                   | 288/559 [00:00<00:00, 353.35it/s] 58%|███████████████████████▎                | 325/559 [00:00<00:00, 357.77it/s] 65%|█████████████████████████▉              | 363/559 [00:01<00:00, 364.54it/s] 72%|████████████████████████████▌           | 400/559 [00:01<00:00, 364.17it/s] 78%|███████████████████████████████▎        | 437/559 [00:01<00:00, 357.11it/s] 85%|█████████████████████████████████▊      | 473/559 [00:01<00:00, 351.60it/s] 91%|████████████████████████████████████▍   | 509/559 [00:01<00:00, 349.79it/s] 97%|██████████████████████████████████████▉ | 545/559 [00:01<00:00, 348.68it/s]100%|████████████████████████████████████████| 559/559 [00:01<00:00, 353.21it/s]
[32m[10/16 22:03:06 d2.data.build]: [0mRemoved 0 images with no usable annotations. 559 images left.
[32m[10/16 22:03:06 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    car     | 559          |
|            |              |[0m
[32m[10/16 22:03:06 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[10/16 22:03:06 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[10/16 22:03:06 d2.data.common]: [0mSerializing 559 elements to byte tensors and concatenating them all ...
[32m[10/16 22:03:06 d2.data.common]: [0mSerialized dataset takes 0.19 MiB
Skip loading parameter 'roi_heads.box_predictor.cls_score.weight' to the model due to incompatible shapes: (81, 2048) in the checkpoint but (2, 2048) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.cls_score.bias' to the model due to incompatible shapes: (81,) in the checkpoint but (2,) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.weight' to the model due to incompatible shapes: (320, 2048) in the checkpoint but (4, 2048) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.bias' to the model due to incompatible shapes: (320,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
The checkpoint state_dict contains keys that are not used by the model:
  [35mproposal_generator.anchor_generator.cell_anchors.0[0m
[32m[10/16 22:03:06 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[10/16 22:03:13 d2.utils.events]: [0m eta: 0:14:17  iter: 19  total_loss: 1.149  loss_cls: 0.6899  loss_box_reg: 0.4325  loss_rpn_cls: 0.006967  loss_rpn_loc: 0.007011  time: 0.3462  data_time: 0.0168  lr: 4.9953e-06  max_mem: 2154M
[32m[10/16 22:03:20 d2.utils.events]: [0m eta: 0:14:17  iter: 39  total_loss: 1  loss_cls: 0.6118  loss_box_reg: 0.4034  loss_rpn_cls: 0.01208  loss_rpn_loc: 0.00533  time: 0.3472  data_time: 0.0025  lr: 9.9902e-06  max_mem: 2154M
[32m[10/16 22:03:27 d2.utils.events]: [0m eta: 0:14:11  iter: 59  total_loss: 1.054  loss_cls: 0.4821  loss_box_reg: 0.5374  loss_rpn_cls: 0.007319  loss_rpn_loc: 0.005636  time: 0.3469  data_time: 0.0025  lr: 1.4985e-05  max_mem: 2154M
[32m[10/16 22:03:34 d2.utils.events]: [0m eta: 0:14:04  iter: 79  total_loss: 0.8139  loss_cls: 0.3511  loss_box_reg: 0.4273  loss_rpn_cls: 0.004478  loss_rpn_loc: 0.005481  time: 0.3460  data_time: 0.0024  lr: 1.998e-05  max_mem: 2154M
[32m[10/16 22:03:41 d2.utils.events]: [0m eta: 0:13:57  iter: 99  total_loss: 0.7804  loss_cls: 0.2794  loss_box_reg: 0.4829  loss_rpn_cls: 0.004786  loss_rpn_loc: 0.005087  time: 0.3454  data_time: 0.0025  lr: 2.4975e-05  max_mem: 2154M
[32m[10/16 22:03:48 d2.utils.events]: [0m eta: 0:13:50  iter: 119  total_loss: 0.6944  loss_cls: 0.2212  loss_box_reg: 0.4426  loss_rpn_cls: 0.006862  loss_rpn_loc: 0.005559  time: 0.3454  data_time: 0.0024  lr: 2.997e-05  max_mem: 2154M
[32m[10/16 22:03:55 d2.utils.events]: [0m eta: 0:13:43  iter: 139  total_loss: 0.6352  loss_cls: 0.1828  loss_box_reg: 0.4179  loss_rpn_cls: 0.003968  loss_rpn_loc: 0.004731  time: 0.3455  data_time: 0.0025  lr: 3.4965e-05  max_mem: 2154M
[32m[10/16 22:04:02 d2.utils.events]: [0m eta: 0:13:36  iter: 159  total_loss: 0.5756  loss_cls: 0.1591  loss_box_reg: 0.412  loss_rpn_cls: 0.007056  loss_rpn_loc: 0.003636  time: 0.3455  data_time: 0.0024  lr: 3.996e-05  max_mem: 2154M
[32m[10/16 22:04:09 d2.utils.events]: [0m eta: 0:13:29  iter: 179  total_loss: 0.5733  loss_cls: 0.1581  loss_box_reg: 0.398  loss_rpn_cls: 0.009248  loss_rpn_loc: 0.00556  time: 0.3456  data_time: 0.0024  lr: 4.4955e-05  max_mem: 2154M
[32m[10/16 22:04:16 d2.utils.events]: [0m eta: 0:13:23  iter: 199  total_loss: 0.5599  loss_cls: 0.1415  loss_box_reg: 0.3963  loss_rpn_cls: 0.006843  loss_rpn_loc: 0.004992  time: 0.3461  data_time: 0.0024  lr: 4.995e-05  max_mem: 2154M
[32m[10/16 22:04:23 d2.utils.events]: [0m eta: 0:13:16  iter: 219  total_loss: 0.6243  loss_cls: 0.1461  loss_box_reg: 0.4633  loss_rpn_cls: 0.00892  loss_rpn_loc: 0.003685  time: 0.3460  data_time: 0.0023  lr: 5.4945e-05  max_mem: 2154M
[32m[10/16 22:04:30 d2.utils.events]: [0m eta: 0:13:09  iter: 239  total_loss: 0.5169  loss_cls: 0.1281  loss_box_reg: 0.384  loss_rpn_cls: 0.005826  loss_rpn_loc: 0.004342  time: 0.3460  data_time: 0.0025  lr: 5.994e-05  max_mem: 2154M
[32m[10/16 22:04:37 d2.utils.events]: [0m eta: 0:13:02  iter: 259  total_loss: 0.534  loss_cls: 0.1076  loss_box_reg: 0.4239  loss_rpn_cls: 0.003574  loss_rpn_loc: 0.003148  time: 0.3460  data_time: 0.0025  lr: 6.4935e-05  max_mem: 2154M
[32m[10/16 22:04:44 d2.utils.events]: [0m eta: 0:12:55  iter: 279  total_loss: 0.5524  loss_cls: 0.1105  loss_box_reg: 0.4359  loss_rpn_cls: 0.005969  loss_rpn_loc: 0.00294  time: 0.3459  data_time: 0.0024  lr: 6.993e-05  max_mem: 2154M
[32m[10/16 22:04:50 d2.utils.events]: [0m eta: 0:12:48  iter: 299  total_loss: 0.5811  loss_cls: 0.1031  loss_box_reg: 0.4659  loss_rpn_cls: 0.002648  loss_rpn_loc: 0.00308  time: 0.3461  data_time: 0.0023  lr: 7.4925e-05  max_mem: 2154M
[32m[10/16 22:04:57 d2.utils.events]: [0m eta: 0:12:41  iter: 319  total_loss: 0.4837  loss_cls: 0.08811  loss_box_reg: 0.3603  loss_rpn_cls: 0.006917  loss_rpn_loc: 0.003318  time: 0.3459  data_time: 0.0024  lr: 7.992e-05  max_mem: 2154M
[32m[10/16 22:05:04 d2.utils.events]: [0m eta: 0:12:33  iter: 339  total_loss: 0.5213  loss_cls: 0.08691  loss_box_reg: 0.4106  loss_rpn_cls: 0.005377  loss_rpn_loc: 0.00285  time: 0.3456  data_time: 0.0025  lr: 8.4915e-05  max_mem: 2154M
[32m[10/16 22:05:11 d2.utils.events]: [0m eta: 0:12:26  iter: 359  total_loss: 0.4734  loss_cls: 0.07699  loss_box_reg: 0.3714  loss_rpn_cls: 0.005559  loss_rpn_loc: 0.003647  time: 0.3457  data_time: 0.0024  lr: 8.991e-05  max_mem: 2154M
[32m[10/16 22:05:18 d2.utils.events]: [0m eta: 0:12:19  iter: 379  total_loss: 0.4604  loss_cls: 0.07907  loss_box_reg: 0.3861  loss_rpn_cls: 0.006047  loss_rpn_loc: 0.00253  time: 0.3456  data_time: 0.0027  lr: 9.4905e-05  max_mem: 2154M
[32m[10/16 22:05:25 d2.utils.events]: [0m eta: 0:12:13  iter: 399  total_loss: 0.4699  loss_cls: 0.07165  loss_box_reg: 0.3996  loss_rpn_cls: 0.00571  loss_rpn_loc: 0.004088  time: 0.3457  data_time: 0.0024  lr: 9.99e-05  max_mem: 2154M
[32m[10/16 22:05:32 d2.utils.events]: [0m eta: 0:12:06  iter: 419  total_loss: 0.4035  loss_cls: 0.06339  loss_box_reg: 0.3141  loss_rpn_cls: 0.00663  loss_rpn_loc: 0.002908  time: 0.3457  data_time: 0.0023  lr: 0.0001049  max_mem: 2154M
[32m[10/16 22:05:39 d2.utils.events]: [0m eta: 0:11:58  iter: 439  total_loss: 0.4195  loss_cls: 0.06538  loss_box_reg: 0.3366  loss_rpn_cls: 0.006521  loss_rpn_loc: 0.002644  time: 0.3456  data_time: 0.0025  lr: 0.00010989  max_mem: 2154M
[32m[10/16 22:05:46 d2.utils.events]: [0m eta: 0:11:52  iter: 459  total_loss: 0.39  loss_cls: 0.06721  loss_box_reg: 0.3135  loss_rpn_cls: 0.003795  loss_rpn_loc: 0.003521  time: 0.3456  data_time: 0.0025  lr: 0.00011489  max_mem: 2154M
[32m[10/16 22:05:53 d2.utils.events]: [0m eta: 0:11:45  iter: 479  total_loss: 0.3407  loss_cls: 0.06038  loss_box_reg: 0.2807  loss_rpn_cls: 0.002795  loss_rpn_loc: 0.002906  time: 0.3456  data_time: 0.0025  lr: 0.00011988  max_mem: 2154M
[32m[10/16 22:06:00 d2.utils.events]: [0m eta: 0:11:38  iter: 499  total_loss: 0.3499  loss_cls: 0.04795  loss_box_reg: 0.2799  loss_rpn_cls: 0.003373  loss_rpn_loc: 0.003042  time: 0.3453  data_time: 0.0025  lr: 0.00012488  max_mem: 2154M
[32m[10/16 22:06:07 d2.utils.events]: [0m eta: 0:11:31  iter: 519  total_loss: 0.2937  loss_cls: 0.04614  loss_box_reg: 0.2361  loss_rpn_cls: 0.002619  loss_rpn_loc: 0.002514  time: 0.3453  data_time: 0.0024  lr: 0.00012987  max_mem: 2154M
[32m[10/16 22:06:13 d2.utils.events]: [0m eta: 0:11:24  iter: 539  total_loss: 0.2757  loss_cls: 0.05478  loss_box_reg: 0.2085  loss_rpn_cls: 0.001404  loss_rpn_loc: 0.002938  time: 0.3453  data_time: 0.0026  lr: 0.00013487  max_mem: 2154M
[32m[10/16 22:06:20 d2.utils.events]: [0m eta: 0:11:17  iter: 559  total_loss: 0.2707  loss_cls: 0.06104  loss_box_reg: 0.196  loss_rpn_cls: 0.004494  loss_rpn_loc: 0.002832  time: 0.3453  data_time: 0.0024  lr: 0.00013986  max_mem: 2154M
[32m[10/16 22:06:27 d2.utils.events]: [0m eta: 0:11:10  iter: 579  total_loss: 0.2674  loss_cls: 0.05494  loss_box_reg: 0.1986  loss_rpn_cls: 0.003403  loss_rpn_loc: 0.002822  time: 0.3452  data_time: 0.0025  lr: 0.00014486  max_mem: 2154M
[32m[10/16 22:06:34 d2.utils.events]: [0m eta: 0:11:03  iter: 599  total_loss: 0.2447  loss_cls: 0.05386  loss_box_reg: 0.178  loss_rpn_cls: 0.001722  loss_rpn_loc: 0.002852  time: 0.3452  data_time: 0.0026  lr: 0.00014985  max_mem: 2154M
[32m[10/16 22:06:41 d2.utils.events]: [0m eta: 0:10:56  iter: 619  total_loss: 0.2636  loss_cls: 0.05048  loss_box_reg: 0.2115  loss_rpn_cls: 0.003649  loss_rpn_loc: 0.002805  time: 0.3451  data_time: 0.0026  lr: 0.00015485  max_mem: 2154M
[32m[10/16 22:06:48 d2.utils.events]: [0m eta: 0:10:49  iter: 639  total_loss: 0.2641  loss_cls: 0.05966  loss_box_reg: 0.1705  loss_rpn_cls: 0.004959  loss_rpn_loc: 0.003136  time: 0.3452  data_time: 0.0025  lr: 0.00015984  max_mem: 2154M
[32m[10/16 22:06:55 d2.utils.events]: [0m eta: 0:10:42  iter: 659  total_loss: 0.2301  loss_cls: 0.05526  loss_box_reg: 0.1661  loss_rpn_cls: 0.002607  loss_rpn_loc: 0.002534  time: 0.3452  data_time: 0.0025  lr: 0.00016484  max_mem: 2154M
[32m[10/16 22:07:02 d2.utils.events]: [0m eta: 0:10:35  iter: 679  total_loss: 0.2503  loss_cls: 0.05175  loss_box_reg: 0.1888  loss_rpn_cls: 0.001889  loss_rpn_loc: 0.003163  time: 0.3452  data_time: 0.0025  lr: 0.00016983  max_mem: 2154M
[32m[10/16 22:07:09 d2.utils.events]: [0m eta: 0:10:28  iter: 699  total_loss: 0.2686  loss_cls: 0.056  loss_box_reg: 0.1868  loss_rpn_cls: 0.003222  loss_rpn_loc: 0.002525  time: 0.3453  data_time: 0.0025  lr: 0.00017483  max_mem: 2154M
[32m[10/16 22:07:16 d2.utils.events]: [0m eta: 0:10:21  iter: 719  total_loss: 0.2647  loss_cls: 0.05618  loss_box_reg: 0.1809  loss_rpn_cls: 0.006296  loss_rpn_loc: 0.002863  time: 0.3453  data_time: 0.0024  lr: 0.00017982  max_mem: 2154M
[32m[10/16 22:07:23 d2.utils.events]: [0m eta: 0:10:14  iter: 739  total_loss: 0.2511  loss_cls: 0.05918  loss_box_reg: 0.1802  loss_rpn_cls: 0.004342  loss_rpn_loc: 0.001994  time: 0.3453  data_time: 0.0024  lr: 0.00018482  max_mem: 2154M
[32m[10/16 22:07:30 d2.utils.events]: [0m eta: 0:10:07  iter: 759  total_loss: 0.2279  loss_cls: 0.05141  loss_box_reg: 0.1771  loss_rpn_cls: 0.0009193  loss_rpn_loc: 0.002361  time: 0.3453  data_time: 0.0024  lr: 0.00018981  max_mem: 2154M
[32m[10/16 22:07:37 d2.utils.events]: [0m eta: 0:10:00  iter: 779  total_loss: 0.2343  loss_cls: 0.05081  loss_box_reg: 0.186  loss_rpn_cls: 0.001363  loss_rpn_loc: 0.002654  time: 0.3453  data_time: 0.0024  lr: 0.00019481  max_mem: 2154M
[32m[10/16 22:07:44 d2.utils.events]: [0m eta: 0:09:53  iter: 799  total_loss: 0.2525  loss_cls: 0.05226  loss_box_reg: 0.1906  loss_rpn_cls: 0.0009485  loss_rpn_loc: 0.002119  time: 0.3452  data_time: 0.0024  lr: 0.0001998  max_mem: 2154M
[32m[10/16 22:07:51 d2.utils.events]: [0m eta: 0:09:46  iter: 819  total_loss: 0.2203  loss_cls: 0.04933  loss_box_reg: 0.1569  loss_rpn_cls: 0.004765  loss_rpn_loc: 0.002776  time: 0.3453  data_time: 0.0027  lr: 0.0002048  max_mem: 2154M
[32m[10/16 22:07:57 d2.utils.events]: [0m eta: 0:09:39  iter: 839  total_loss: 0.2343  loss_cls: 0.04804  loss_box_reg: 0.1827  loss_rpn_cls: 0.001394  loss_rpn_loc: 0.002507  time: 0.3452  data_time: 0.0025  lr: 0.00020979  max_mem: 2154M
[32m[10/16 22:08:04 d2.utils.events]: [0m eta: 0:09:32  iter: 859  total_loss: 0.2294  loss_cls: 0.04647  loss_box_reg: 0.1736  loss_rpn_cls: 0.001109  loss_rpn_loc: 0.001952  time: 0.3451  data_time: 0.0026  lr: 0.00021479  max_mem: 2154M
[32m[10/16 22:08:11 d2.utils.events]: [0m eta: 0:09:25  iter: 879  total_loss: 0.2296  loss_cls: 0.0536  loss_box_reg: 0.1736  loss_rpn_cls: 0.001723  loss_rpn_loc: 0.002398  time: 0.3450  data_time: 0.0025  lr: 0.00021978  max_mem: 2154M
[32m[10/16 22:08:18 d2.utils.events]: [0m eta: 0:09:18  iter: 899  total_loss: 0.2241  loss_cls: 0.05573  loss_box_reg: 0.1468  loss_rpn_cls: 0.001524  loss_rpn_loc: 0.002395  time: 0.3450  data_time: 0.0024  lr: 0.00022478  max_mem: 2154M
[32m[10/16 22:08:25 d2.utils.events]: [0m eta: 0:09:11  iter: 919  total_loss: 0.2244  loss_cls: 0.04872  loss_box_reg: 0.1875  loss_rpn_cls: 0.00166  loss_rpn_loc: 0.002807  time: 0.3450  data_time: 0.0025  lr: 0.00022977  max_mem: 2154M
[32m[10/16 22:08:32 d2.utils.events]: [0m eta: 0:09:04  iter: 939  total_loss: 0.2716  loss_cls: 0.07255  loss_box_reg: 0.1951  loss_rpn_cls: 0.003237  loss_rpn_loc: 0.002603  time: 0.3450  data_time: 0.0025  lr: 0.00023477  max_mem: 2154M
[32m[10/16 22:08:39 d2.utils.events]: [0m eta: 0:08:57  iter: 959  total_loss: 0.2298  loss_cls: 0.04268  loss_box_reg: 0.1731  loss_rpn_cls: 0.00108  loss_rpn_loc: 0.002507  time: 0.3449  data_time: 0.0026  lr: 0.00023976  max_mem: 2154M
[32m[10/16 22:08:45 d2.utils.events]: [0m eta: 0:08:50  iter: 979  total_loss: 0.2517  loss_cls: 0.05662  loss_box_reg: 0.1692  loss_rpn_cls: 0.001403  loss_rpn_loc: 0.001965  time: 0.3448  data_time: 0.0025  lr: 0.00024476  max_mem: 2154M
[32m[10/16 22:08:52 d2.utils.events]: [0m eta: 0:08:43  iter: 999  total_loss: 0.2522  loss_cls: 0.06398  loss_box_reg: 0.1744  loss_rpn_cls: 0.002714  loss_rpn_loc: 0.002417  time: 0.3448  data_time: 0.0026  lr: 0.00024975  max_mem: 2154M
[32m[10/16 22:08:59 d2.utils.events]: [0m eta: 0:08:36  iter: 1019  total_loss: 0.2892  loss_cls: 0.05808  loss_box_reg: 0.2078  loss_rpn_cls: 0.001734  loss_rpn_loc: 0.003236  time: 0.3448  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:06 d2.utils.events]: [0m eta: 0:08:29  iter: 1039  total_loss: 0.2205  loss_cls: 0.04868  loss_box_reg: 0.168  loss_rpn_cls: 0.002134  loss_rpn_loc: 0.002267  time: 0.3448  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:13 d2.utils.events]: [0m eta: 0:08:22  iter: 1059  total_loss: 0.2259  loss_cls: 0.05541  loss_box_reg: 0.1695  loss_rpn_cls: 0.002578  loss_rpn_loc: 0.002153  time: 0.3448  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:20 d2.utils.events]: [0m eta: 0:08:15  iter: 1079  total_loss: 0.2715  loss_cls: 0.06391  loss_box_reg: 0.1914  loss_rpn_cls: 0.003099  loss_rpn_loc: 0.002546  time: 0.3447  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:27 d2.utils.events]: [0m eta: 0:08:08  iter: 1099  total_loss: 0.2135  loss_cls: 0.03997  loss_box_reg: 0.1715  loss_rpn_cls: 0.001137  loss_rpn_loc: 0.002765  time: 0.3448  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:34 d2.utils.events]: [0m eta: 0:08:01  iter: 1119  total_loss: 0.2593  loss_cls: 0.0536  loss_box_reg: 0.189  loss_rpn_cls: 0.003034  loss_rpn_loc: 0.003207  time: 0.3448  data_time: 0.0024  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:41 d2.utils.events]: [0m eta: 0:07:54  iter: 1139  total_loss: 0.2386  loss_cls: 0.05886  loss_box_reg: 0.177  loss_rpn_cls: 0.001811  loss_rpn_loc: 0.002225  time: 0.3449  data_time: 0.0023  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:48 d2.utils.events]: [0m eta: 0:07:47  iter: 1159  total_loss: 0.2378  loss_cls: 0.05999  loss_box_reg: 0.1625  loss_rpn_cls: 0.0007542  loss_rpn_loc: 0.001876  time: 0.3448  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:09:55 d2.utils.events]: [0m eta: 0:07:40  iter: 1179  total_loss: 0.2212  loss_cls: 0.04689  loss_box_reg: 0.1653  loss_rpn_cls: 0.001277  loss_rpn_loc: 0.002486  time: 0.3448  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:02 d2.utils.events]: [0m eta: 0:07:33  iter: 1199  total_loss: 0.2275  loss_cls: 0.04272  loss_box_reg: 0.1652  loss_rpn_cls: 0.001141  loss_rpn_loc: 0.002198  time: 0.3447  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:08 d2.utils.events]: [0m eta: 0:07:26  iter: 1219  total_loss: 0.1987  loss_cls: 0.03227  loss_box_reg: 0.1544  loss_rpn_cls: 0.0008212  loss_rpn_loc: 0.002318  time: 0.3447  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:15 d2.utils.events]: [0m eta: 0:07:19  iter: 1239  total_loss: 0.2369  loss_cls: 0.05404  loss_box_reg: 0.1809  loss_rpn_cls: 0.001602  loss_rpn_loc: 0.002208  time: 0.3447  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:22 d2.utils.events]: [0m eta: 0:07:12  iter: 1259  total_loss: 0.2387  loss_cls: 0.05423  loss_box_reg: 0.172  loss_rpn_cls: 0.001221  loss_rpn_loc: 0.002299  time: 0.3448  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:29 d2.utils.events]: [0m eta: 0:07:06  iter: 1279  total_loss: 0.2394  loss_cls: 0.05216  loss_box_reg: 0.1884  loss_rpn_cls: 0.001323  loss_rpn_loc: 0.002541  time: 0.3448  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:36 d2.utils.events]: [0m eta: 0:06:58  iter: 1299  total_loss: 0.2438  loss_cls: 0.06226  loss_box_reg: 0.1781  loss_rpn_cls: 0.001644  loss_rpn_loc: 0.00287  time: 0.3447  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:43 d2.utils.events]: [0m eta: 0:06:52  iter: 1319  total_loss: 0.2477  loss_cls: 0.06824  loss_box_reg: 0.1655  loss_rpn_cls: 0.0007612  loss_rpn_loc: 0.002225  time: 0.3448  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:50 d2.utils.events]: [0m eta: 0:06:45  iter: 1339  total_loss: 0.2342  loss_cls: 0.06657  loss_box_reg: 0.1519  loss_rpn_cls: 0.001425  loss_rpn_loc: 0.002386  time: 0.3448  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:10:57 d2.utils.events]: [0m eta: 0:06:38  iter: 1359  total_loss: 0.2151  loss_cls: 0.04004  loss_box_reg: 0.1691  loss_rpn_cls: 0.001367  loss_rpn_loc: 0.001797  time: 0.3448  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:04 d2.utils.events]: [0m eta: 0:06:31  iter: 1379  total_loss: 0.2426  loss_cls: 0.05804  loss_box_reg: 0.1669  loss_rpn_cls: 0.002532  loss_rpn_loc: 0.002535  time: 0.3447  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:11 d2.utils.events]: [0m eta: 0:06:24  iter: 1399  total_loss: 0.2104  loss_cls: 0.04727  loss_box_reg: 0.1412  loss_rpn_cls: 0.0007033  loss_rpn_loc: 0.002103  time: 0.3448  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:18 d2.utils.events]: [0m eta: 0:06:17  iter: 1419  total_loss: 0.2352  loss_cls: 0.06142  loss_box_reg: 0.1828  loss_rpn_cls: 0.001951  loss_rpn_loc: 0.00257  time: 0.3447  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:25 d2.utils.events]: [0m eta: 0:06:10  iter: 1439  total_loss: 0.2018  loss_cls: 0.05199  loss_box_reg: 0.1453  loss_rpn_cls: 0.001126  loss_rpn_loc: 0.002241  time: 0.3447  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:31 d2.utils.events]: [0m eta: 0:06:03  iter: 1459  total_loss: 0.2356  loss_cls: 0.04526  loss_box_reg: 0.1733  loss_rpn_cls: 0.001603  loss_rpn_loc: 0.002727  time: 0.3447  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:38 d2.utils.events]: [0m eta: 0:05:56  iter: 1479  total_loss: 0.2663  loss_cls: 0.0512  loss_box_reg: 0.1906  loss_rpn_cls: 0.002282  loss_rpn_loc: 0.002065  time: 0.3446  data_time: 0.0029  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:45 d2.utils.events]: [0m eta: 0:05:49  iter: 1499  total_loss: 0.235  loss_cls: 0.06388  loss_box_reg: 0.1452  loss_rpn_cls: 0.001524  loss_rpn_loc: 0.002264  time: 0.3447  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:52 d2.utils.events]: [0m eta: 0:05:42  iter: 1519  total_loss: 0.2512  loss_cls: 0.05772  loss_box_reg: 0.1905  loss_rpn_cls: 0.002453  loss_rpn_loc: 0.002239  time: 0.3447  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:11:59 d2.utils.events]: [0m eta: 0:05:35  iter: 1539  total_loss: 0.2493  loss_cls: 0.06113  loss_box_reg: 0.1716  loss_rpn_cls: 0.001131  loss_rpn_loc: 0.002461  time: 0.3447  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:06 d2.utils.events]: [0m eta: 0:05:28  iter: 1559  total_loss: 0.2307  loss_cls: 0.05206  loss_box_reg: 0.175  loss_rpn_cls: 0.0008551  loss_rpn_loc: 0.002562  time: 0.3447  data_time: 0.0024  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:13 d2.utils.events]: [0m eta: 0:05:21  iter: 1579  total_loss: 0.2211  loss_cls: 0.04881  loss_box_reg: 0.1596  loss_rpn_cls: 0.001218  loss_rpn_loc: 0.00225  time: 0.3448  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:21 d2.utils.events]: [0m eta: 0:05:14  iter: 1599  total_loss: 0.2747  loss_cls: 0.06039  loss_box_reg: 0.1976  loss_rpn_cls: 0.002844  loss_rpn_loc: 0.00226  time: 0.3453  data_time: 0.0030  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:28 d2.utils.events]: [0m eta: 0:05:07  iter: 1619  total_loss: 0.2184  loss_cls: 0.04788  loss_box_reg: 0.164  loss_rpn_cls: 0.00238  loss_rpn_loc: 0.002852  time: 0.3457  data_time: 0.0029  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:36 d2.utils.events]: [0m eta: 0:05:00  iter: 1639  total_loss: 0.2136  loss_cls: 0.05033  loss_box_reg: 0.1631  loss_rpn_cls: 0.001045  loss_rpn_loc: 0.00199  time: 0.3461  data_time: 0.0029  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:43 d2.utils.events]: [0m eta: 0:04:53  iter: 1659  total_loss: 0.2257  loss_cls: 0.04959  loss_box_reg: 0.1641  loss_rpn_cls: 0.001148  loss_rpn_loc: 0.002507  time: 0.3465  data_time: 0.0028  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:51 d2.utils.events]: [0m eta: 0:04:46  iter: 1679  total_loss: 0.2232  loss_cls: 0.04565  loss_box_reg: 0.1654  loss_rpn_cls: 0.0008225  loss_rpn_loc: 0.002223  time: 0.3470  data_time: 0.0027  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:12:59 d2.utils.events]: [0m eta: 0:04:39  iter: 1699  total_loss: 0.2133  loss_cls: 0.04927  loss_box_reg: 0.1512  loss_rpn_cls: 0.001784  loss_rpn_loc: 0.002552  time: 0.3474  data_time: 0.0030  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:06 d2.utils.events]: [0m eta: 0:04:32  iter: 1719  total_loss: 0.2561  loss_cls: 0.06396  loss_box_reg: 0.1868  loss_rpn_cls: 0.00175  loss_rpn_loc: 0.002764  time: 0.3475  data_time: 0.0027  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:13 d2.utils.events]: [0m eta: 0:04:25  iter: 1739  total_loss: 0.2214  loss_cls: 0.0506  loss_box_reg: 0.1476  loss_rpn_cls: 0.00188  loss_rpn_loc: 0.003098  time: 0.3475  data_time: 0.0028  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:20 d2.utils.events]: [0m eta: 0:04:18  iter: 1759  total_loss: 0.2557  loss_cls: 0.0575  loss_box_reg: 0.1601  loss_rpn_cls: 0.001253  loss_rpn_loc: 0.002126  time: 0.3474  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:27 d2.utils.events]: [0m eta: 0:04:11  iter: 1779  total_loss: 0.2277  loss_cls: 0.04061  loss_box_reg: 0.1783  loss_rpn_cls: 0.0009153  loss_rpn_loc: 0.002663  time: 0.3474  data_time: 0.0024  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:34 d2.utils.events]: [0m eta: 0:04:04  iter: 1799  total_loss: 0.2225  loss_cls: 0.03748  loss_box_reg: 0.1631  loss_rpn_cls: 0.001036  loss_rpn_loc: 0.002467  time: 0.3478  data_time: 0.0034  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:42 d2.utils.events]: [0m eta: 0:03:57  iter: 1819  total_loss: 0.2211  loss_cls: 0.05307  loss_box_reg: 0.1669  loss_rpn_cls: 0.001044  loss_rpn_loc: 0.002429  time: 0.3485  data_time: 0.0033  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:50 d2.utils.events]: [0m eta: 0:03:50  iter: 1839  total_loss: 0.2252  loss_cls: 0.06365  loss_box_reg: 0.1636  loss_rpn_cls: 0.001569  loss_rpn_loc: 0.002569  time: 0.3490  data_time: 0.0034  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:13:58 d2.utils.events]: [0m eta: 0:03:44  iter: 1859  total_loss: 0.2313  loss_cls: 0.05712  loss_box_reg: 0.1663  loss_rpn_cls: 0.000606  loss_rpn_loc: 0.002341  time: 0.3495  data_time: 0.0033  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:14:06 d2.utils.events]: [0m eta: 0:03:37  iter: 1879  total_loss: 0.2196  loss_cls: 0.04055  loss_box_reg: 0.1643  loss_rpn_cls: 0.0008661  loss_rpn_loc: 0.002804  time: 0.3501  data_time: 0.0031  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:14:15 d2.utils.events]: [0m eta: 0:03:30  iter: 1899  total_loss: 0.2366  loss_cls: 0.05864  loss_box_reg: 0.1611  loss_rpn_cls: 0.0008347  loss_rpn_loc: 0.002212  time: 0.3506  data_time: 0.0031  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:14:22 d2.utils.events]: [0m eta: 0:03:23  iter: 1919  total_loss: 0.2311  loss_cls: 0.06002  loss_box_reg: 0.1744  loss_rpn_cls: 0.002412  loss_rpn_loc: 0.002473  time: 0.3510  data_time: 0.0029  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:14:30 d2.utils.events]: [0m eta: 0:03:16  iter: 1939  total_loss: 0.2107  loss_cls: 0.03859  loss_box_reg: 0.1599  loss_rpn_cls: 0.001272  loss_rpn_loc: 0.002238  time: 0.3513  data_time: 0.0030  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:14:38 d2.utils.events]: [0m eta: 0:03:09  iter: 1959  total_loss: 0.2141  loss_cls: 0.06055  loss_box_reg: 0.1509  loss_rpn_cls: 0.0007316  loss_rpn_loc: 0.002086  time: 0.3519  data_time: 0.0033  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:14:46 d2.utils.events]: [0m eta: 0:03:02  iter: 1979  total_loss: 0.2366  loss_cls: 0.05223  loss_box_reg: 0.1745  loss_rpn_cls: 0.002851  loss_rpn_loc: 0.002531  time: 0.3523  data_time: 0.0031  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:14:54 d2.utils.events]: [0m eta: 0:02:55  iter: 1999  total_loss: 0.2251  loss_cls: 0.06262  loss_box_reg: 0.1742  loss_rpn_cls: 0.001302  loss_rpn_loc: 0.00229  time: 0.3527  data_time: 0.0034  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:02 d2.utils.events]: [0m eta: 0:02:48  iter: 2019  total_loss: 0.2312  loss_cls: 0.04558  loss_box_reg: 0.1669  loss_rpn_cls: 0.001068  loss_rpn_loc: 0.002524  time: 0.3531  data_time: 0.0039  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:08 d2.utils.events]: [0m eta: 0:02:41  iter: 2039  total_loss: 0.1944  loss_cls: 0.05071  loss_box_reg: 0.1556  loss_rpn_cls: 0.001079  loss_rpn_loc: 0.002263  time: 0.3530  data_time: 0.0027  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:15 d2.utils.events]: [0m eta: 0:02:34  iter: 2059  total_loss: 0.2344  loss_cls: 0.03934  loss_box_reg: 0.1763  loss_rpn_cls: 0.0005443  loss_rpn_loc: 0.002269  time: 0.3529  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:22 d2.utils.events]: [0m eta: 0:02:27  iter: 2079  total_loss: 0.226  loss_cls: 0.04284  loss_box_reg: 0.1702  loss_rpn_cls: 0.0009551  loss_rpn_loc: 0.002504  time: 0.3529  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:29 d2.utils.events]: [0m eta: 0:02:20  iter: 2099  total_loss: 0.2497  loss_cls: 0.05874  loss_box_reg: 0.1835  loss_rpn_cls: 0.001222  loss_rpn_loc: 0.00291  time: 0.3529  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:37 d2.utils.events]: [0m eta: 0:02:13  iter: 2119  total_loss: 0.2249  loss_cls: 0.04599  loss_box_reg: 0.1723  loss_rpn_cls: 0.0007529  loss_rpn_loc: 0.002663  time: 0.3528  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:43 d2.utils.events]: [0m eta: 0:02:06  iter: 2139  total_loss: 0.1939  loss_cls: 0.03355  loss_box_reg: 0.1449  loss_rpn_cls: 0.001515  loss_rpn_loc: 0.002737  time: 0.3527  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:50 d2.utils.events]: [0m eta: 0:01:59  iter: 2159  total_loss: 0.1939  loss_cls: 0.05029  loss_box_reg: 0.1392  loss_rpn_cls: 0.001118  loss_rpn_loc: 0.002746  time: 0.3527  data_time: 0.0027  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:15:57 d2.utils.events]: [0m eta: 0:01:52  iter: 2179  total_loss: 0.2268  loss_cls: 0.05219  loss_box_reg: 0.1526  loss_rpn_cls: 0.00103  loss_rpn_loc: 0.002907  time: 0.3526  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:04 d2.utils.events]: [0m eta: 0:01:45  iter: 2199  total_loss: 0.2661  loss_cls: 0.06144  loss_box_reg: 0.1851  loss_rpn_cls: 0.001802  loss_rpn_loc: 0.002913  time: 0.3525  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:11 d2.utils.events]: [0m eta: 0:01:38  iter: 2219  total_loss: 0.2101  loss_cls: 0.05399  loss_box_reg: 0.1472  loss_rpn_cls: 0.0004088  loss_rpn_loc: 0.002089  time: 0.3525  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:18 d2.utils.events]: [0m eta: 0:01:31  iter: 2239  total_loss: 0.2108  loss_cls: 0.05809  loss_box_reg: 0.1447  loss_rpn_cls: 0.001069  loss_rpn_loc: 0.002182  time: 0.3524  data_time: 0.0027  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:25 d2.utils.events]: [0m eta: 0:01:24  iter: 2259  total_loss: 0.2272  loss_cls: 0.04207  loss_box_reg: 0.156  loss_rpn_cls: 0.00161  loss_rpn_loc: 0.002368  time: 0.3523  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:32 d2.utils.events]: [0m eta: 0:01:17  iter: 2279  total_loss: 0.2111  loss_cls: 0.05314  loss_box_reg: 0.1712  loss_rpn_cls: 0.003277  loss_rpn_loc: 0.002059  time: 0.3522  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:39 d2.utils.events]: [0m eta: 0:01:10  iter: 2299  total_loss: 0.2288  loss_cls: 0.05687  loss_box_reg: 0.1596  loss_rpn_cls: 0.0008931  loss_rpn_loc: 0.002702  time: 0.3522  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:46 d2.utils.events]: [0m eta: 0:01:03  iter: 2319  total_loss: 0.2073  loss_cls: 0.06927  loss_box_reg: 0.1552  loss_rpn_cls: 0.00143  loss_rpn_loc: 0.002404  time: 0.3521  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:52 d2.utils.events]: [0m eta: 0:00:56  iter: 2339  total_loss: 0.2046  loss_cls: 0.04056  loss_box_reg: 0.153  loss_rpn_cls: 0.0009572  loss_rpn_loc: 0.001917  time: 0.3520  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:16:59 d2.utils.events]: [0m eta: 0:00:49  iter: 2359  total_loss: 0.2033  loss_cls: 0.04194  loss_box_reg: 0.1424  loss_rpn_cls: 0.0006379  loss_rpn_loc: 0.002507  time: 0.3519  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:06 d2.utils.events]: [0m eta: 0:00:42  iter: 2379  total_loss: 0.2175  loss_cls: 0.06128  loss_box_reg: 0.1465  loss_rpn_cls: 0.001951  loss_rpn_loc: 0.00271  time: 0.3519  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:13 d2.utils.events]: [0m eta: 0:00:35  iter: 2399  total_loss: 0.1974  loss_cls: 0.05152  loss_box_reg: 0.1483  loss_rpn_cls: 0.001108  loss_rpn_loc: 0.001846  time: 0.3518  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:20 d2.utils.events]: [0m eta: 0:00:28  iter: 2419  total_loss: 0.2069  loss_cls: 0.03573  loss_box_reg: 0.1546  loss_rpn_cls: 0.000527  loss_rpn_loc: 0.002465  time: 0.3517  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:27 d2.utils.events]: [0m eta: 0:00:21  iter: 2439  total_loss: 0.2388  loss_cls: 0.04489  loss_box_reg: 0.1722  loss_rpn_cls: 0.001213  loss_rpn_loc: 0.00258  time: 0.3517  data_time: 0.0024  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:34 d2.utils.events]: [0m eta: 0:00:14  iter: 2459  total_loss: 0.2305  loss_cls: 0.062  loss_box_reg: 0.173  loss_rpn_cls: 0.001696  loss_rpn_loc: 0.002462  time: 0.3516  data_time: 0.0027  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:41 d2.utils.events]: [0m eta: 0:00:07  iter: 2479  total_loss: 0.2281  loss_cls: 0.06541  loss_box_reg: 0.1644  loss_rpn_cls: 0.001117  loss_rpn_loc: 0.002243  time: 0.3516  data_time: 0.0025  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:48 d2.utils.events]: [0m eta: 0:00:00  iter: 2499  total_loss: 0.225  loss_cls: 0.0592  loss_box_reg: 0.1559  loss_rpn_cls: 0.001722  loss_rpn_loc: 0.002197  time: 0.3515  data_time: 0.0026  lr: 0.00025  max_mem: 2154M
[32m[10/16 22:17:48 d2.engine.hooks]: [0mOverall training speed: 2498 iterations in 0:14:38 (0.3515 s / it)
[32m[10/16 22:17:48 d2.engine.hooks]: [0mTotal training time: 0:14:41 (0:00:03 on hooks)
[32m[10/16 22:17:49 d2.evaluation.coco_evaluation]: [0m'data' is not registered by `register_coco_instances`. Therefore trying to convert it to COCO format ...
[32m[10/16 22:17:49 d2.data.datasets.coco]: [0mConverting annotations of dataset 'data' to COCO format ...)
  0%|                                                   | 0/559 [00:00<?, ?it/s]  6%|██▍                                      | 33/559 [00:00<00:01, 325.21it/s] 12%|████▉                                    | 68/559 [00:00<00:01, 337.38it/s] 18%|███████▎                                | 102/559 [00:00<00:01, 337.41it/s] 25%|█████████▉                              | 139/559 [00:00<00:01, 349.66it/s] 31%|████████████▌                           | 175/559 [00:00<00:01, 353.31it/s] 38%|███████████████                         | 211/559 [00:00<00:00, 350.16it/s] 44%|█████████████████▋                      | 247/559 [00:00<00:00, 350.33it/s] 51%|████████████████████▎                   | 283/559 [00:00<00:00, 348.86it/s] 57%|██████████████████████▊                 | 318/559 [00:00<00:00, 346.10it/s] 64%|█████████████████████████▍              | 356/559 [00:01<00:00, 355.81it/s] 70%|████████████████████████████            | 393/559 [00:01<00:00, 359.00it/s] 77%|██████████████████████████████▋         | 429/559 [00:01<00:00, 349.46it/s] 83%|█████████████████████████████████▎      | 465/559 [00:01<00:00, 350.04it/s] 90%|███████████████████████████████████▊    | 501/559 [00:01<00:00, 344.49it/s] 96%|██████████████████████████████████████▎ | 536/559 [00:01<00:00, 344.36it/s]100%|████████████████████████████████████████| 559/559 [00:01<00:00, 346.07it/s]
[32m[10/16 22:17:50 d2.data.datasets.coco]: [0mConverting dataset dicts into COCO format
[32m[10/16 22:17:51 d2.data.datasets.coco]: [0mConversion finished, #images: 559, #annotations: 559
[32m[10/16 22:17:51 d2.data.datasets.coco]: [0mCaching COCO format annotations at './output/data_coco_format.json' ...
  0%|                                                   | 0/559 [00:00<?, ?it/s]  6%|██▌                                      | 35/559 [00:00<00:01, 348.38it/s] 13%|█████▏                                   | 70/559 [00:00<00:01, 348.47it/s] 19%|███████▌                                | 105/559 [00:00<00:01, 339.46it/s] 25%|██████████                              | 141/559 [00:00<00:01, 346.04it/s] 32%|████████████▋                           | 178/559 [00:00<00:01, 351.05it/s] 38%|███████████████▎                        | 214/559 [00:00<00:00, 345.69it/s] 45%|█████████████████▊                      | 249/559 [00:00<00:00, 343.19it/s] 51%|████████████████████▎                   | 284/559 [00:00<00:00, 345.14it/s] 57%|██████████████████████▉                 | 321/559 [00:00<00:00, 351.50it/s] 64%|█████████████████████████▋              | 359/559 [00:01<00:00, 359.95it/s] 71%|████████████████████████████▍           | 397/559 [00:01<00:00, 362.65it/s] 78%|███████████████████████████████         | 434/559 [00:01<00:00, 354.64it/s] 84%|█████████████████████████████████▋      | 470/559 [00:01<00:00, 355.72it/s] 91%|████████████████████████████████████▏   | 506/559 [00:01<00:00, 352.94it/s] 97%|██████████████████████████████████████▊ | 542/559 [00:01<00:00, 350.69it/s]100%|████████████████████████████████████████| 559/559 [00:01<00:00, 350.45it/s]
[32m[10/16 22:17:52 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[10/16 22:17:52 d2.data.common]: [0mSerializing 559 elements to byte tensors and concatenating them all ...
[32m[10/16 22:17:52 d2.data.common]: [0mSerialized dataset takes 0.19 MiB
[32m[10/16 22:17:52 d2.evaluation.evaluator]: [0mStart inference on 559 batches
[32m[10/16 22:17:55 d2.evaluation.evaluator]: [0mInference done 11/559. Dataloading: 0.0007 s/iter. Inference: 0.1865 s/iter. Eval: 0.0001 s/iter. Total: 0.1873 s/iter. ETA=0:01:42
[32m[10/16 22:18:00 d2.evaluation.evaluator]: [0mInference done 39/559. Dataloading: 0.0009 s/iter. Inference: 0.1827 s/iter. Eval: 0.0001 s/iter. Total: 0.1839 s/iter. ETA=0:01:35
[32m[10/16 22:18:05 d2.evaluation.evaluator]: [0mInference done 61/559. Dataloading: 0.0010 s/iter. Inference: 0.2002 s/iter. Eval: 0.0001 s/iter. Total: 0.2014 s/iter. ETA=0:01:40
[32m[10/16 22:18:10 d2.evaluation.evaluator]: [0mInference done 86/559. Dataloading: 0.0010 s/iter. Inference: 0.2003 s/iter. Eval: 0.0001 s/iter. Total: 0.2015 s/iter. ETA=0:01:35
[32m[10/16 22:18:15 d2.evaluation.evaluator]: [0mInference done 110/559. Dataloading: 0.0010 s/iter. Inference: 0.2021 s/iter. Eval: 0.0001 s/iter. Total: 0.2033 s/iter. ETA=0:01:31
[32m[10/16 22:18:20 d2.evaluation.evaluator]: [0mInference done 138/559. Dataloading: 0.0010 s/iter. Inference: 0.1984 s/iter. Eval: 0.0001 s/iter. Total: 0.1996 s/iter. ETA=0:01:24
[32m[10/16 22:18:25 d2.evaluation.evaluator]: [0mInference done 164/559. Dataloading: 0.0009 s/iter. Inference: 0.1982 s/iter. Eval: 0.0001 s/iter. Total: 0.1993 s/iter. ETA=0:01:18
[32m[10/16 22:18:30 d2.evaluation.evaluator]: [0mInference done 194/559. Dataloading: 0.0009 s/iter. Inference: 0.1938 s/iter. Eval: 0.0001 s/iter. Total: 0.1949 s/iter. ETA=0:01:11
[32m[10/16 22:18:36 d2.evaluation.evaluator]: [0mInference done 221/559. Dataloading: 0.0009 s/iter. Inference: 0.1932 s/iter. Eval: 0.0001 s/iter. Total: 0.1944 s/iter. ETA=0:01:05
[32m[10/16 22:18:41 d2.evaluation.evaluator]: [0mInference done 244/559. Dataloading: 0.0009 s/iter. Inference: 0.1960 s/iter. Eval: 0.0001 s/iter. Total: 0.1972 s/iter. ETA=0:01:02
[32m[10/16 22:18:46 d2.evaluation.evaluator]: [0mInference done 273/559. Dataloading: 0.0009 s/iter. Inference: 0.1935 s/iter. Eval: 0.0001 s/iter. Total: 0.1946 s/iter. ETA=0:00:55
[32m[10/16 22:18:51 d2.evaluation.evaluator]: [0mInference done 302/559. Dataloading: 0.0009 s/iter. Inference: 0.1915 s/iter. Eval: 0.0001 s/iter. Total: 0.1926 s/iter. ETA=0:00:49
[32m[10/16 22:18:56 d2.evaluation.evaluator]: [0mInference done 324/559. Dataloading: 0.0009 s/iter. Inference: 0.1940 s/iter. Eval: 0.0001 s/iter. Total: 0.1952 s/iter. ETA=0:00:45
[32m[10/16 22:19:01 d2.evaluation.evaluator]: [0mInference done 348/559. Dataloading: 0.0009 s/iter. Inference: 0.1950 s/iter. Eval: 0.0001 s/iter. Total: 0.1962 s/iter. ETA=0:00:41
[32m[10/16 22:19:06 d2.evaluation.evaluator]: [0mInference done 375/559. Dataloading: 0.0009 s/iter. Inference: 0.1945 s/iter. Eval: 0.0001 s/iter. Total: 0.1956 s/iter. ETA=0:00:35
[32m[10/16 22:19:11 d2.evaluation.evaluator]: [0mInference done 400/559. Dataloading: 0.0009 s/iter. Inference: 0.1951 s/iter. Eval: 0.0001 s/iter. Total: 0.1962 s/iter. ETA=0:00:31
[32m[10/16 22:19:16 d2.evaluation.evaluator]: [0mInference done 426/559. Dataloading: 0.0009 s/iter. Inference: 0.1950 s/iter. Eval: 0.0001 s/iter. Total: 0.1961 s/iter. ETA=0:00:26
[32m[10/16 22:19:21 d2.evaluation.evaluator]: [0mInference done 448/559. Dataloading: 0.0009 s/iter. Inference: 0.1968 s/iter. Eval: 0.0001 s/iter. Total: 0.1979 s/iter. ETA=0:00:21
[32m[10/16 22:19:26 d2.evaluation.evaluator]: [0mInference done 470/559. Dataloading: 0.0009 s/iter. Inference: 0.1982 s/iter. Eval: 0.0001 s/iter. Total: 0.1994 s/iter. ETA=0:00:17
[32m[10/16 22:19:31 d2.evaluation.evaluator]: [0mInference done 497/559. Dataloading: 0.0009 s/iter. Inference: 0.1977 s/iter. Eval: 0.0001 s/iter. Total: 0.1988 s/iter. ETA=0:00:12
[32m[10/16 22:19:37 d2.evaluation.evaluator]: [0mInference done 523/559. Dataloading: 0.0009 s/iter. Inference: 0.1976 s/iter. Eval: 0.0001 s/iter. Total: 0.1987 s/iter. ETA=0:00:07
[32m[10/16 22:19:42 d2.evaluation.evaluator]: [0mInference done 548/559. Dataloading: 0.0009 s/iter. Inference: 0.1979 s/iter. Eval: 0.0001 s/iter. Total: 0.1990 s/iter. ETA=0:00:02
[32m[10/16 22:19:44 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:50.092460 (0.198723 s / iter per device, on 1 devices)
[32m[10/16 22:19:44 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:49 (0.197367 s / iter per device, on 1 devices)
[32m[10/16 22:19:44 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[10/16 22:19:44 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/coco_instances_results.json
[32m[10/16 22:19:44 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
[32m[10/16 22:19:44 d2.evaluation.fast_eval_api]: [0mEvaluate annotation type *bbox*
[32m[10/16 22:19:44 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.evaluate() finished in 0.04 seconds.
[32m[10/16 22:19:44 d2.evaluation.fast_eval_api]: [0mAccumulating evaluation results...
[32m[10/16 22:19:44 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.accumulate() finished in 0.00 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.411
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.589
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.510
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.332
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.409
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.490
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.486
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.745
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.745
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.540
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.740
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.826
[32m[10/16 22:19:44 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 41.090 | 58.914 | 51.035 | 33.187 | 40.868 | 48.956 |
